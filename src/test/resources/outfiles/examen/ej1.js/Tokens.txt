<ResLet,>
<ID,0>
<TypeString,>
<SemCol,>
<FunID,>
<ID,1>
<TypeInt,>
<ParOpen,>
<TypeInt,>
<ID,0>
<ParClose,>
<KeyOpen,>
<CondIf,>
<ParOpen,>
<ID,0>
<AsValue,>
<AsValue,>
<CteInt,0>
<ParClose,>
<Return,>
<CteInt,1>
<SemCol,>
<Return,>
<ID,0>
<MOD,>
<ID,1>
<ParOpen,>
<ID,0>
<MOD,>
<CteInt,1>
<ParClose,>
<SemCol,>
<KeyClose,>
<ResLet,>
<ID,2>
<TypeInt,>
<AsValue,>
<CteInt,1>
<SemCol,>
<ResLet,>
<ID,3>
<TypeInt,>
<AsValue,>
<ID,2>
<SemCol,>
<FunID,>
<ID,4>
<TypeString,>
<ParOpen,>
<ParClose,>
<KeyOpen,>
<Return,>
<Cad,"\n">
<SemCol,>
<KeyClose,>
<FunID,>
<ID,5>
<TypeInt,>
<ParOpen,>
<TypeInt,>
<ID,0>
<ParClose,>
<KeyOpen,>
<ResLet,>
<ID,6>
<TypeInt,>
<AsValue,>
<CteInt,0>
<MOD,>
<ID,2>
<MOD,>
<CteInt,1>
<SemCol,>
<LoopDo,>
<KeyOpen,>
<ID,6>
<MOD,>
<AsValue,>
<ID,0>
<MOD,>
<MOD,>
<SemCol,>
<KeyClose,>
<LoopWhile,>
<ParOpen,>
<ID,0>
<AND,>
<AsValue,>
<CteInt,0>
<ParClose,>
<SemCol,>
<Return,>
<ID,6>
<SemCol,>
<KeyClose,>
<FunID,>
<ID,7>
<TypeInt,>
<ParOpen,>
<ParClose,>
<KeyOpen,>
<ResLet,>
<ID,6>
<TypeInt,>
<AsValue,>
<CteInt,1>
<SemCol,>
<ResLet,>
<ID,8>
<TypeInt,>
<SemCol,>
<LoopWhile,>
<ParOpen,>
<ID,8>
<GT,>
<ID,9>
<ParClose,>
<KeyOpen,>
<ID,6>
<MOD,>
<AsValue,>
<ResAutoSum,>
<ID,8>
<SemCol,>
<KeyClose,>
<Return,>
<ID,6>
<SemCol,>
<KeyClose,>
<FunID,>
<ID,9>
<TypeInt,>
<ParOpen,>
<TypeInt,>
<ID,0>
<ParClose,>
<KeyOpen,>
<ResLet,>
<ID,8>
<TypeInt,>
<SemCol,>
<ResLet,>
<ID,6>
<TypeInt,>
<AsValue,>
<ID,3>
<SemCol,>
<ID,8>
<GT,>
<AsValue,>
<ID,0>
<SemCol,>
<ID,8>
<ResAutoSum,>
<ParClose,>
<KeyOpen,>
<ID,6>
<MOD,>
<AsValue,>
<ID,8>
<SemCol,>
<KeyClose,>
<Return,>
<ID,6>
<SemCol,>
<KeyClose,>
<ResLet,>
<ID,10>
<TypeInt,>
<SemCol,>
<ResLet,>
<ID,11>
<TypeInt,>
<SemCol,>
<ResLet,>
<ID,12>
<TypeInt,>
<SemCol,>
<FunID,>
<ID,13>
<ParOpen,>
<TypeString,>
<ID,14>
<Com,>
<TypeString,>
<ID,15>
<Com,>
<TypeInt,>
<ID,16>
<ParClose,>
<KeyOpen,>
<ResPrint,>
<ID,14>
<SemCol,>
<ResPrint,>
<ID,15>
<SemCol,>
<ResPrint,>
<ParOpen,>
<ID,16>
<ParClose,>
<SemCol,>
<ResPrint,>
<ID,4>
<ParOpen,>
<ParClose,>
<SemCol,>
<Return,>
<SemCol,>
<KeyClose,>
<FunID,>
<ID,17>
<TypeString,>
<ParOpen,>
<TypeBool,>
<ID,18>
<ParClose,>
<KeyOpen,>
<CondIf,>
<ParOpen,>
<AND,>
<ID,18>
<ParClose,>
<KeyOpen,>
<Return,>
<ID,14>
<SemCol,>
<KeyClose,>
<ID,19>
<Cad,";}
}	// fin cadena: funciￃﾳn que devuelve una cadena

// Part">
<ID,20>
<ID,6>
<Cad,";	// Primera sentencia que se ejecutarￃﾭa

print s;
print
 ">
<SemCol,>
<ResIn,>
<ID,21>
<SemCol,>
<ID,20>
<ID,6>
<ID,22>
<Cad,"; print num; print">
<ID,23>
<ID,24>
<CteInt,1>
<SemCol,>
<ID,25>
<SemCol,>
<KeyClose,>
<ID,12>
<AsValue,>
<ID,7>
<ParOpen,>
<ParClose,>
<SemCol,>
<ID,11>
<AsValue,>
<ID,5>
<ParOpen,>
<ID,21>
<ParClose,>
<SemCol,>
<ID,13>
<ParOpen,>
<ID,17>
<ParOpen,>
<TokF,>
<ParClose,>
<Com,>
<Cad,"recursivo es: ">
<Com,>
<ID,1>
<ParOpen,>
<ID,21>
<ParClose,>
<ParClose,>
<SemCol,>
<ID,13>
<ParOpen,>
<ID,14>
<Com,>
<Cad,"con do-while es: ">
<Com,>
<ID,11>
<ParClose,>
<SemCol,>
<ID,13>
<ParOpen,>
<ID,14>
<Com,>
<Cad,"con while es: ">
<Com,>
<ID,12>
<ParClose,>
<SemCol,>
<ID,13>
<ParOpen,>
<ID,17>
<ParOpen,>
<TokF,>
<ParClose,>
<Com,>
<Cad,"con for es: ">
<Com,>
<ID,10>
<ParClose,>
<SemCol,>
<KeyClose,>
<KeyClose,>
<FunID,>
<ID,26>
<TypeBool,>
<ParOpen,>
<TypeInt,>
<ID,27>
<ParClose,>
<KeyOpen,>
<Return,>
<ParOpen,>
<ID,27>
<MOD,>
<CteInt,4>
<AsValue,>
<AsValue,>
<CteInt,0>
<AND,>
<ID,27>
<MOD,>
<CteInt,100>
<AND,>
<AsValue,>
<CteInt,0>
<AND,>
<AND,>
<ID,27>
<MOD,>
<CteInt,400>
<AsValue,>
<AsValue,>
<CteInt,0>
<ParClose,>
<SemCol,>
<KeyClose,>
<FunID,>
<ID,28>
<TypeInt,>
<ParOpen,>
<TypeInt,>
<ID,29>
<Com,>
<TypeInt,>
<ID,27>
<ParClose,>
<KeyOpen,>
<ID,25>
<SemCol,>
<Return,>
<ParOpen,>
<CteInt,28>
<ParClose,>
<SemCol,>
<ID,30>
<SemCol,>
<ResPrint,>
<ID,29>
<SemCol,>
<ResPrint,>
<ID,4>
<ParOpen,>
<ParClose,>
<SemCol,>
<Return,>
<CteInt,0>
<SemCol,>
<KeyClose,>
<KeyClose,>
<FunID,>
<ID,30>
<TypeBool,>
<ParOpen,>
<TypeInt,>
<ID,31>
<Com,>
<TypeInt,>
<ID,29>
<Com,>
<TypeInt,>
<ID,27>
<ParClose,>
<KeyOpen,>
<Return,>
<ID,29>
<GT,>
<AsValue,>
<CteInt,1>
<AND,>
<ID,29>
<GT,>
<AsValue,>
<CteInt,12>
<AND,>
<ID,31>
<GT,>
<AsValue,>
<CteInt,1>
<AND,>
<ID,31>
<GT,>
<AsValue,>
<ID,28>
<ParOpen,>
<ID,29>
<Com,>
<ID,27>
<ParClose,>
<SemCol,>
<KeyClose,>
<FunID,>
<ID,32>
<ParOpen,>
<TypeInt,>
<ID,33>
<Com,>
<TypeInt,>
<ID,34>
<ParClose,>
<KeyOpen,>
<ResPrint,>
<ID,33>
<MOD,>
<ID,34>
<SemCol,>
<ResPrint,>
<ParOpen,>
<ID,4>
<ParOpen,>
<ParClose,>
<ParClose,>
<SemCol,>
<KeyClose,>
<FunID,>
<ID,35>
<ParOpen,>
<TypeInt,>
<ID,36>
<Com,>
<TypeInt,>
<ID,37>
<ParClose,>
<KeyOpen,>
<ResLet,>
<ID,14>
<TypeInt,>
<SemCol,>
<ID,14>
<GT,>
<ID,37>
<SemCol,>
<ID,14>
<ResAutoSum,>
<ParClose,>
<KeyOpen,>
<ID,36>
<MOD,>
<AsValue,>
<ID,36>
<SemCol,>
<ID,13>
<ParOpen,>
<Cad,"Potencia:">
<Com,>
<Cad," ">
<Com,>
<ID,36>
<ParClose,>
<SemCol,>
<KeyClose,>
<KeyClose,>
<FunID,>
<ID,38>
<ParOpen,>
<ParClose,>
<KeyOpen,>
<ResLet,>
<ID,39>
<TypeInt,>
<SemCol,>
<ResLet,>
<ID,40>
<TypeInt,>
<SemCol,>
<ResLet,>
<ID,41>
<TypeInt,>
<SemCol,>
<ResLet,>
<ID,42>
<TypeInt,>
<SemCol,>
<ResPrint,>
<Cad,"Escriba ">
<ID,43>
<Cad," nￃﾺmeros: ';
	input v1; input v2; input v3;
	
	if (v3 == 0) ">
<CondIf,>
<ParOpen,>
<AND,>
<ParOpen,>
<ParOpen,>
<ID,39>
<AsValue,>
<AsValue,>
<ID,40>
<ParClose,>
<AND,>
<ParOpen,>
<ID,39>
<AND,>
<AsValue,>
<ID,41>
<ParClose,>
<ParClose,>
<ParClose,>
<KeyOpen,>
<ResPrint,>
<Cad,"Escriba su nombre: ';
		let s string;	// Oculta a la s global
">
<CondIf,>
<ParOpen,>
<ID,40>
<GT,>
<ID,41>
<ParClose,>
<KeyOpen,>
<ResLet,>
<ID,44>
<TypeInt,>
<AsValue,>
<ID,40>
<SemCol,>
<KeyClose,>
<KeyClose,>
<ResPrint,>
<ID,14>
<SemCol,>
<KeyClose,>
<ID,14>
<AsValue,>
<Cad,"El primer valor era ">
<SemCol,>
<CondIf,>
<ParOpen,>
<ID,39>
<AND,>
<AsValue,>
<CteInt,0>
<ParClose,>
<KeyOpen,>
<ResPrint,>
<ParOpen,>
<ID,14>
<ParClose,>
<SemCol,>
<ResPrint,>
<ID,39>
<SemCol,>
<ResPrint,>
<Cad,".\n">
<SemCol,>
<KeyClose,>
<ID,32>
<ParOpen,>
<ID,2>
<Com,>
<MOD,>
<ID,3>
<ParClose,>
<SemCol,>
<ResPrint,>
<ParOpen,>
<Cad,".\n">
<ParClose,>
<SemCol,>
<KeyClose,>
<ID,35>
<ParOpen,>
<ID,44>
<Com,>
<CteInt,4>
<ParClose,>
<SemCol,>
<ResLet,>
<ID,8>
<TypeInt,>
<SemCol,>
<ID,8>
<GT,>
<AsValue,>
<CteInt,10>
<SemCol,>
<ResAutoSum,>
<ID,8>
<ParClose,>
<KeyOpen,>
<ID,42>
<MOD,>
<ID,8>
<SemCol,>
<KeyClose,>
<ID,35>
<ParOpen,>
<ID,42>
<Com,>
<CteInt,5>
<ParClose,>
<SemCol,>
<ID,32>
<ParOpen,>
<ID,8>
<Com,>
<ID,21>
<ParClose,>
<SemCol,>
<ID,13>
<ParOpen,>
<Cad,"">
<Com,>
<ID,17>
<ParOpen,>
<TokT,>
<ParClose,>
<Com,>
<CteInt,666>
<ParClose,>
<SemCol,>
<KeyClose,>
<ID,38>
<ParOpen,>
<ParClose,>
<SemCol,>
<Teof,>

START⟶ SENA START  
START⟶ FUN START  
START⟶ eof  


CTE⟶ cad  
CTE⟶ num  
CTE⟶ true  
CTE⟶ false  


INC⟶ ++ id  

EXP⟶ VALUE EXPX  
EXP⟶ INC EXPX  

EXPX⟶ > EXP   
EXPX⟶ &&  EXP  
EXPX⟶ % EXP  
EXPX⟶ lambda  

VALUE⟶ id XPX  
VALUE⟶ CTE     
VALUE⟶ ( EXP )  

XPX⟶ ( FCALL )  
XPX⟶ lambda    

ASIGN⟶  = EXP ;  



DECL⟶ let id TD DECLX ;  

DECLX⟶ ASIGN  
DECLX⟶ lambda  



TD⟶ int  
TD⟶ string  
TD⟶ boolean    

TDX⟶ TD    
TDX⟶ lambda    

INOUT⟶ print EXP ;      
INOUT⟶ input id ;      

SENA⟶ IFX      
SENA⟶ DECL     
SENA⟶ do { BODY } WILE     
WILE⟶ while ( EXP ) ;      
SENA⟶ SENB                 

SENB⟶ id IDX               
SENB⟶ INOUT                
SENB⟶ return RX ;          
SENB⟶ INC ;                


BODY⟶ SENA BODY            
BODY⟶ lambda               


IFX⟶ if ( EXP ) IFAX ;     

IFAX⟶ SENB     
IFAX⟶ { SENB }  



FCALL⟶ EXP FCALLX      
FCALL⟶ lambda          
FCALLX⟶ , EXP FCALLX   
FCALLX⟶ lambda          

RX⟶ EXP                
RX⟶ lambda             

IDX⟶ ASIGN           
IDX⟶ ( FCALL ) ;       

FUN⟶ function id TDX ( PARM ) { BODY }     



PARM⟶ TD id PARMX      
PARM⟶ lambda       
PARMX⟶ , TD id PARMX   
PARMX⟶ lambda      
